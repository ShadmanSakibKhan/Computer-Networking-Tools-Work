Server

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {

    private static ServerSocket server = null;
    private static Socket socket = null;
    private static final int port = 8080;

    public static void main(String[] args) {
        // Create IO Objects
        BufferedReader in = null;
        PrintWriter out = null;

        // Start Server
        try {
            System.out.println("Server is starting...");
            server = new ServerSocket(port);
            System.out.println("Server has started");
        } catch (IOException e) {
            System.out.println("Can not listen to port: " + port);
            System.exit(-1);
        }

        while (true) {
            // Create Socket
            try {
                socket = server.accept();
                System.out.println("Client has been connected");
            } catch (IOException e) {
                System.out.println("Communication Error with client");
                System.exit(-1);
            }

            try {
                in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                out = new PrintWriter(socket.getOutputStream(), true);

                out.println("Welcome to Rock Paper Scissors Game!");

                while (socket.isConnected()) {
                    out.println("Enter a number from 1 to 3 (1=Rock, 2=Paper, 3=Scissors): ");
                    int choice = Integer.parseInt(in.readLine());

                    switch (choice) {
                        case 1:
                            out.println("Server: Rock");
                            break;
                        case 2:
                            out.println("Server: Paper");
                            break;
                        case 3:
                            out.println("Server: Scissors");
                            break;
                        default:
                            out.println("Invalid input. Please enter a number from 1 to 3.");
                            break;
                    }
                }
            } catch (IOException e) {
                System.out.println("Client Left");
            } finally {
                try {
                    socket.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}




Client


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class Client {

    public static Socket socket = null;

    public static void main(String[] args) {
        try {
            socket = new Socket("localhost", 8080);
            System.out.println("Connected to Server\n" + "Socket: " + socket.getInetAddress() + "." + socket.getPort()
                    + "In");
        } catch (IOException e) {
            System.out.println("Connection to network cannot be established");
            System.exit(-1);
        }

        BufferedReader in = null;
        PrintWriter out = null;
        Scanner consoleInput = new Scanner(System.in);

        try {
            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            out = new PrintWriter(socket.getOutputStream(), true);

            System.out.println("Server: " + in.readLine());

            while (true) {
                System.out.print("Client: ");
                int choice = consoleInput.nextInt();
                out.println(choice);

                System.out.println("Server: " + in.readLine());
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                socket.close();
                consoleInput.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}

